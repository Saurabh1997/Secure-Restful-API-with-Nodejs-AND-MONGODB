{
  "swagger": "2.0",
  "title": "Music API Documentation",
  "Description": "Music API for MongodB",
  "basePath": "/api",
  "tags": [
    {
      "name": "Songs",
      "description": "API for Song Endpoints"
    },
    {
      "name": "Users",
      "description": "API for Users Endpoints"
    },
    {
      "name": "Playlists",
      "description": "API for Playlists Endpoints"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "API Endpoint to create new User",
        "description": "Create New User in DB",
        "parameters": [
          {
            "name": "user",
            "description": "User parameters to register new user",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New User created",
            "schema": {
              "$ref": "#definitions/Signupresponse"
            }
          }
        }
      }
    },
    "/songs": {
      "post": {
        "tags": ["Songs"],
        "summary": "API Endpoint for create Song",
        "description": "Create New song in DB",
        "parameters": [
          {
            "name": "song",
            "description": "Song parameters to create new song",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/Song"
            }
          },
          {
            "name": "authorization",
            "description": "Access token to authorize the user",
            "in": "header",
            "required": "true",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New Song created",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },

      "get": {
        "tags": ["Songs"],
        "summary": "API Endpoint to find all Song",
        "description": "find all songs from DB",
        "parameters": [
          {
            "name": "page",
            "type": "integer",
            "description": "Define the page index for the page",
            "in": "query"
          },
          {
            "name": "perPage",
            "type": "integer",
            "description": "Define the limit for the records per page for example, 5",
            "in": "query"
          },
          {
            "name": "authorization",
            "description": "Access token to authorize the user",
            "in": "header",
            "required": "true",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All the songs",
            "schema": {
              "$ref": "#definitions/Songs"
            }
          }
        }
      }
    },
    "/songs/{id}": {
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": "true",
          "description": "ID of the song",
          "in": "path"
        },
        {
          "name": "authorization",
          "description": "Access token to authorize the user",
          "in": "header",
          "required": "true",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Songs"],
        "summary": "API Endpoint to find Song by ID",
        "description": "find a Song from DB",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Song has been found",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "delete": {
        "tags": ["Songs"],
        "summary": "API Endpoint to Delete Song by ID",
        "description": "Delete a Song from DB",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Song has been deleted",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "put": {
        "tags": ["Songs"],
        "summary": "API Endpoint to update Song",
        "description": "Update song in DB",
        "parameters": [
          {
            "name": "song",
            "description": "Song parameter to update song",
            "in": "body",
            "schema": {
              "$ref": "#definitions/UpdateSong"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New Song created",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "API Endpoint to login to his/her account",
        "description": "Login User",
        "parameters": [
          {
            "name": "user",
            "description": "User parameters to login",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/UserLogin"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#definitions/UserResponse"
            }
          }
        }
      }
    },
    "/playlist": {
      "post": {
        "tags": ["Playlists"],
        "summary": "API Endpoint to create new Playlist",
        "description": "Create New playlist in DB",
        "parameters": [
          {
            "name": "playlist",
            "description": "playlist parameters to create new playlist",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/Playlist"
            }
          },
          {
            "name": "authorization",
            "description": "Access token to authorize the user",
            "in": "header",
            "required": "true",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New playlist created",
            "schema": {
              "$ref": "#definitions/PlaylistCustomresponse"
            }
          }
        }
      },
      "get": {
        "tags": ["Playlists"],
        "summary": "API Endpoint to find all Playlist",
        "description": "find all Playlist from DB",
        "parameters": [
          {
            "name": "authorization",
            "description": "Access token to authorize the user",
            "in": "header",
            "required": "true",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All the Playlist",
            "schema": {
              "$ref": "#definitions/Playlists"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Song": {
      "required": ["title", "url"],
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "UpdateSong": {
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "Songs": {
      "properties": {
        "docs": {
          "type": "array",
          "items": {
            "$ref": "#definitions/Song"
          }
        },
        "total": {
          "type": "integer"
        },
        "pages": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        }
      }
    },
    "Signupresponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "User": {
      "required": ["firstName", "lastName", "email", "password"],
      "properties": {
        "_id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "integer"
        }
      }
    },
    "UserLogin": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "required": ["token"],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Playlist": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "songs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PlaylistCustomresponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        },
        "songs": {
          "type": "array",
          "items": {
            "$ref": "#definitions/Song"
          }
        },
        "user": {
          "$ref": "#definitions/UserCustomRsp"
        }
      }
    },
    "UserCustomRsp": {
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "Playlists": {
      "type": "array",
      "items": {
        "$ref": "#definitions/PlaylistCustomresponse"
      }
    }
  }
}
